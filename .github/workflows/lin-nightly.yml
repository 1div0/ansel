name: Nightly Linux PKG

on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

permissions:
  contents: read

jobs:
  Win64:
    if: github.repository == 'aurelienpierreeng/ansel' || github.event_name == 'workflow_dispatch'
    name: Nightly Ansel Linux build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        btype:
          - Release
        compiler:
          - { compiler: GNU12,   CC: gcc-12,    CXX: g++-12,      packages: gcc-12 g++-12 }
        eco: [-DBINARY_PACKAGE_BUILD=ON]
        target:
          - skiptest
        generator:
          - Ninja
        branch:
          - { code: master, label: stable }
    env:
      CC: ${{ matrix.compiler.CC }}
      CXX: ${{ matrix.compiler.CXX }}
      SRC_DIR: ${{ github.workspace }}/src
      BUILD_DIR: ${{ github.workspace }}/build
      INSTALL_PREFIX: ${{ github.workspace }}/usr
      ECO: ${{ matrix.eco }}
      CMAKE_BUILD_TYPE: ${{ matrix.btype }}
      GENERATOR: ${{ matrix.generator }}
      TARGET: ${{ matrix.target }}
      DARKTABLE_CLI: ${{ github.workspace }}/usr/bin/ansel-cli
      BRANCH: ${{ matrix.branch.code }}
      BUILD_NAME: ${{ matrix.branch.label }}
    steps:
      - name: Install compiler ${{ matrix.compiler.compiler }}
        run: |
          sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
          sudo add-apt-repository -y universe
          sudo add-apt-repository -y multiverse
          sudo apt-get update
          sudo apt-get -y install \
            ${{ matrix.compiler.packages }}
      - name: Install Base Dependencies
        run: |
          sudo apt-get -y install \
            build-essential \
            appstream-util \
            desktop-file-utils \
            gettext \
            git \
            gdb \
            intltool \
            libatk1.0-dev \
            libcairo2-dev \
            libcolord-dev \
            libcolord-gtk-dev \
            libcmocka-dev \
            libcups2-dev \
            libcurl4-gnutls-dev \
            libexiv2-dev \
            libgdk-pixbuf2.0-dev \
            libglib2.0-dev \
            libgraphicsmagick1-dev \
            libgtk-3-dev \
            libheif-dev \
            libjpeg-dev \
            libjson-glib-dev \
            liblcms2-dev \
            liblensfun-dev \
            liblua5.3-dev \
            libopenexr-dev \
            libopenjp2-7-dev \
            libosmgpsmap-1.0-dev \
            libpango1.0-dev \
            libpng-dev \
            libportmidi-dev \
            libpugixml-dev \
            librsvg2-dev \
            libsaxon-java \
            libsdl2-dev \
            libsecret-1-dev \
            libsoup2.4-dev \
            libsqlite3-dev \
            libtiff5-dev \
            libwebp-dev \
            libx11-dev \
            libxml2-dev \
            libxml2-utils \
            ninja-build \
            perl \
            po4a \
            python3-jsonschema \
            xsltproc \
            zlib1g-dev;
      - uses: actions/checkout@v3
        with:
          ref: ${{ env.BRANCH }}
          fetch-depth: 0
          submodules: true
          path: src
      - name: Update lensfun data
        if: ${{ success() }}
        run: |
          lensfun-update-data
      - name: Build and Install
        run: |
          cmake -E make_directory "${BUILD_DIR}"
          cmake -E make_directory "${INSTALL_PREFIX}"
          ./src/.ci/ci-script.sh;
      - name: Check if it runs
        if: ${{ matrix.target != 'usermanual' }}
        run: |
          ${INSTALL_PREFIX}/bin/ansel --version || true
          ${INSTALL_PREFIX}/bin/ansel-cli \
                 --width 2048 --height 2048 \
                 --hq true --apply-custom-presets false \
                 "${SRC_DIR}/src/tests/integration/images/mire1.cr2" \
                 "${SRC_DIR}/src/tests/integration/0000-nop/nop.xmp" \
                 output.png \
                 --core --disable-opencl --conf host_memory_limit=8192 \
                 --conf worker_threads=4 -t 4 \
                 --conf plugins/lighttable/export/force_lcms2=FALSE \
                 --conf plugins/lighttable/export/iccintent=0
      - name: Build AppImage
        uses: AppImageCrafters/build-appimage-action@master
        if: ${{ success() }}
        with:
          recipe: AppImageBuilder.yml
      - name: Package upload
        if: ${{ success() }}
        uses: actions/upload-artifact@v3
        with:
          name: ansel.${{ env.BUILD_NAME }}.AppImage
          path: ${{ env.BUILD_DIR }}/ansel-*.AppImage
          retention-days: 90
          
  upload_to_release:
    runs-on: ubuntu-latest
    needs: Win64
    env:
      BUILD_DIR: ${{ github.workspace }}/build
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          path: ${{ env.BUILD_DIR }}
      - name: Update nightly release
        uses: eine/tip@master
        with:
          tag: v0.0.0
          rm: false
          token: ${{ secrets.GITHUB_TOKEN }}
          files: ${{ env.BUILD_DIR }}/ansel-*.exe
